<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mugencai.mapper.ArticleMapper">

  <resultMap id="article" type="Article">
    <id property="id" column="id"/>
    <result property="title" column="title"/>
    <result property="content" column="content"/>
    <result property="recommend" column="recommend"/>
    <result property="published" column="published"/>
    <result property="createTime" column="create_time"/>
    <result property="updateTime" column="update_time"/>
    <result property="firstPicture" column="first_picture"/>
    <result property="description" column="description"/>
    <result property="views" column="views"/>
    <association property="type" javaType="Type">
      <id property="id" column="id"/>
      <result property="name" column="name"/>
    </association>
    <association property="user" javaType="User">
      <id property="id" column="id"/>
      <result property="username" column="username"/>
      <result property="avatar" column="avatar"/>
    </association>
  </resultMap>

  <resultMap id="articles" type="Article">
    <id property="id" column="aid"/>
    <result property="createTime" column="create_time"/>
    <result property="updateTime" column="update_time"/>
    <result property="title" column="title"/>
    <result property="description" column="description"/>
    <result property="views" column="views"/>
    <result property="firstPicture" column="first_picture"/>
    <association property="user" javaType="User">   <!--many to one-->
      <id property="id" column="uid"/>
      <result property="username" column="username"/>
      <result property="avatar" column="avatar"/>
    </association>
    <association property="type" javaType="Type">   <!--many to one-->
      <id property="id" column="id"/>
      <result property="name" column="typename"/>
    </association>
    <collection property="tags" ofType="Tag">   <!--many to many-->
      <id property="id" column="tid"/>
      <result property="name" column="tagname"/>
    </collection>
  </resultMap>

  <insert id="addArticle" parameterType="Article">
    insert into t_blog (id, appreciation, commentabled, content, create_time, first_picture, flag, published, recommend,
                        share_statement, title, update_time, views, `description`, user_id, type_id, tag_ids)
    values (#{id}, #{appreciation}, #{commentabled}, #{content}, #{createTime}, #{firstPicture}, #{flag}, #{published}, #{recommend},
            #{shareStatement}, #{title}, #{updateTime}, #{views},#{description},#{userId},#{typeId},#{tagIds});
  </insert>

  <delete id="deleteArticle" parameterType="int">
    delete
    from t_blog
    where id=#{id};
  </delete>

  <update id="updateArticle" parameterType="Article">
    update t_blog
    set appreciation=#{appreciation}, commentabled=#{commentabled}, content=#{content}, create_time=#{createTime}, first_picture=#{firstPicture}, flag=#{flag}, published=#{published}, recommend=#{recommend},
        share_statement=#{shareStatement}, title=#{title}, update_time=#{updateTime}, views=#{views},`description`=#{description}, type_id=#{typeId}, tag_ids=#{tagIds}
    where id=#{id};
  </update>

  <select id="getArticle" resultType="Article" parameterType="int"> /*get article by id at adminPage*/
    select *
    from t_blog
    where id=#{id};
  </select>

  <select id="getDetailedArticle" resultMap="article"> /*get article's detailed information at homepage*/
    select
        b.id,b.title,b.user_id,b.update_time,b.first_picture,b.content,b.views,b.appreciation,b.flag,
        u.id,u.username,u.avatar
    from t_blog b, t_user u
    where b.user_id=u.id and b.id=#{id};
  </select>

  <select id="getAboutArticle" resultMap="article">
    select
      b.id,b.title,b.user_id,b.update_time,b.first_picture,b.content,b.views,b.appreciation,b.flag,
      u.username,u.avatar
    from t_blog b, t_user u
    where b.user_id=u.id and b.id=0;
  </select>


  <select id="listArticle" resultMap="article"> /*get articles at adminPage*/
    select b.id, t.id, b.title, t.name,  b.recommend, b.published,  b.create_time, b.update_time
    from t_blog b, t_type t
    where b.type_id = t.id order by b.update_time desc;
  </select>


  <select id="listIndexArticle" resultMap="article">  /*get published articles at homepage*/
    select b.id, b.first_picture, b.description, b.update_time, b.title, b.views, t.name, u.username, u.avatar
    from t_blog b, t_user u, t_type t
    where b.user_id=u.id and b.type_id=t.id and b.published=true
    order by b.update_time desc;
  </select>

  <select id="listRecommendArticle" resultType="Article"> /*get recommended published articles at homepage*/
    select *
    from t_blog b
    where b.recommend = true and b.published=true
    order by b.update_time desc limit 6;
  </select>
  
  <select id="getGroupYear" resultType="String">
    select year(b.update_time) year, count(year(b.update_time)) count
    from t_blog b
    group by year
    order by year desc;
  </select>


  <select id="listArticleByYear" resultType="Article" parameterType="String">
    select *, year(b.update_time) year
    from t_blog b
    where year(b.update_time)=#{year} and b.published=true
    order by b.update_time desc;
  </select>

  <select id="listArticleByType" parameterType="int" resultMap="article">
    select *
    from t_blog b, t_type t, t_user u
    where b.type_id=t.id and b.user_id=u.id and b.type_id=#{typeId} and b.published=true;
  </select>

  <select id="listArticleByTag" parameterType="int" resultMap="articles">
    select b.update_time, b.description, b.views, b.first_picture, b.recommend, b.published,  b.create_time,
           b.id aid, b.title,
           t.id tid, t.name tagname,
           u.username, u.id uid, u.avatar,
           t_type.id, t_type.name typename
    from t_blog b, t_tag t, t_type, t_user u, t_blog_tags tb
    where
        b.id=tb.blog_id and b.user_id=u.id and b.type_id=t_type.id and b.published=true
        and t.id=tb.tag_id and tb.tag_id=#{tid};
  </select>

  <select id="listArticleBySearch" resultMap="article" parameterType="String">
    <bind name="pattern" value="'%' + query + '%'" />
    select
      b.id,b.update_time,b.views,b.first_picture,b.title,b.description,
      t.name,
      u.username, u.avatar
    from t_blog b, t_type t, t_user u
    where
        b.type_id=t.id and b.user_id=u.id and b.published=true
        and (b.title like #{pattern} or b.description like #{pattern} or b.content like #{pattern});
  </select>

  <update id="updateViewsById" parameterType="int">
    update t_blog b
    set b.views = b.views + 1
    where b.id=#{id};
  </update>

</mapper>